apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "io.monteirodev.comfreyproject"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 4
        versionName "1.04"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

ext {
    androidSupportVersion = "27.1.1"
    butterknifeVersion = "8.8.1"
    constraintLayoutVersion = '1.1.2'
    espressoCoreVersion = "3.0.2"
    firebaseCoreVersion = "16.0.1"
    firebaseJobdispatcherVersion = "0.8.5"
    firebaseMessagingVersion = "17.1.0"
    glideVersion = "4.7.1"
    gsonVersion = "2.8.2"
    junitVersion = "4.12"
    lifecycleVersion = "1.1.1"
    retrofitVersion = "2.4.0"
    roomVersion = "1.1.1"
    runnerVersion = "1.0.2"
    stethoVersion = "1.5.0"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // support
    implementation "com.android.support:appcompat-v7:$androidSupportVersion"
    implementation "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"
    implementation "com.android.support:cardview-v7:$androidSupportVersion"
    implementation "com.android.support:design:$androidSupportVersion"
    implementation "com.android.support:recyclerview-v7:$androidSupportVersion"

    // tests
    implementation "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"
    implementation "com.android.support:support-v4:$androidSupportVersion"
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "com.android.support.test:runner:$runnerVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espressoCoreVersion"

    // butterknife
    implementation "com.jakewharton:butterknife:$butterknifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterknifeVersion"

    // firebase
    implementation "com.google.firebase:firebase-core:$firebaseCoreVersion"
    implementation "com.firebase:firebase-jobdispatcher:$firebaseJobdispatcherVersion"
    implementation "com.google.firebase:firebase-messaging:$firebaseMessagingVersion"

    // glide
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$glideVersion"

    // gson
    implementation "com.google.code.gson:gson:$gsonVersion"

    // lifecycle
    implementation "android.arch.lifecycle:extensions:$lifecycleVersion"
    annotationProcessor "android.arch.lifecycle:compiler:$lifecycleVersion"

    // multiline collapsingToolbar
    implementation "net.opacapp:multiline-collapsingtoolbar:$androidSupportVersion"

    // retrofit
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"

    // room
    implementation "android.arch.persistence.room:runtime:$roomVersion"
    annotationProcessor "android.arch.persistence.room:compiler:$roomVersion"

    // stetho
    implementation "com.facebook.stetho:stetho:$stethoVersion"
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion androidSupportVersion
            }
        }
    }
}

// Add to the bottom of the file
apply plugin: 'com.google.gms.google-services'
